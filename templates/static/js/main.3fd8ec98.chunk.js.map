{"version":3,"sources":["ducks/modules/chat.js","ducks/modules/session.js","ducks/store.js","ducks/middleware.js","components/Home/Home.js","components/YouTubePlayer/YouTubePlayer.js","components/RoomControls/RoomControls.js","components/Chat/Settings.js","components/Chat/Message.js","components/Chat/Input.js","components/Chat/Chat.js","App.js","serviceWorker.js","index.js","components/Home/Home.module.sass","components/Chat/Message.module.sass","App.module.sass","components/YouTubePlayer/YouTubePlayer.module.sass","components/Chat/Chat.module.sass","components/Chat/settings.png","components/Chat/Input.module.sass"],"names":["initialState","messages","userInfo","username","localStorage","getItem","photo_url","showSettingsModal","reducer","produce","draft","action","type","setItem","show","push","message","sendMessage","timestampLastChanged","Date","now","sendTimestamp","link","token","socket","playState","timestamp","setLink","setTimestamp","combineReducers","chat","session","createStore","composeWithDevTools","applyMiddleware","store","next","dispatch","getState","codeRef","useRef","className","styles","ctn","create","onClick","axios","get","headers","then","resp","data","console","log","window","open","join","code","ref","joinButton","current","value","useSelector","state","videoLink","player","id","getYouTubeID","firstRun","useEffect","playVideo","pauseVideo","seekTo","emit","getCurrentTime","room","videoId","opts","width","playerVars","autoplay","onReady","event","target","onPlay","e","onPause","useDispatch","style","color","readOnly","onChange","newLink","src","settingsIcon","user","pic","name","placeholder","onKeyDown","key","Settings","map","i","Message","Input","Room","tokenFromURL","useLocation","pathname","slice","alreadySyncedChat","alreadySyncedTimestamp","socketIOClient","connect","tokenToSend","on","payload","delta","actionStamp","setSocket","setToken","YouTubePlayer","Chat","App","exact","path","component","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"sSAWMA,EAAe,CACjBC,SAAU,GAEVC,SAAU,CACNC,SAPW,UAAGC,aAAaC,QAAQ,mBAAxB,QAAuC,YAQlDC,UAPW,UAAGF,aAAaC,QAAQ,oBAAxB,QAAwC,mCASvDE,mBAAmB,GAGjBC,EAAUC,aAAQ,SAACC,GAAwB,IAAjBC,EAAgB,uDAAP,GACrC,OAAQA,EAAOC,MACX,IApBgB,WAoBhB,IACYT,EAAaQ,EAAbR,SAGR,OAFAO,EAAMR,SAASC,SAAWA,OAC1BC,aAAaS,QAAQ,WAAYV,GAGrC,IAzBqB,gBAyBrB,IACYG,EAAcK,EAAdL,UAGR,OAFAI,EAAMR,SAASI,UAAYA,OAC3BF,aAAaS,QAAQ,YAAaP,GAGtC,IA9BsB,iBAgClB,YADAI,EAAMH,kBAAoBI,EAAOG,MAGrC,IArCoB,eA2ChB,YALAJ,EAAMT,SAASc,KAAK,CAChBZ,SAAUQ,EAAOR,SACjBG,UAAWK,EAAOL,UAClBU,QAASL,EAAOK,UAIxB,IAzCiB,YA2Cb,YADAN,EAAMT,SAAN,sBAAqBU,EAAOV,UAA5B,YAAyCS,EAAMT,eAGxDD,GAiBUiB,EAAc,SAAC,GAAD,MAAuC,CAC9DL,KAnEwB,eAoExBI,QAFuB,EAAGA,QAG1Bb,SAHuB,EAAYA,SAInCG,UAJuB,EAAsBA,YAYlCE,ICtETR,EAAe,CAEjBkB,qBAAsBC,KAAKC,MAC3BC,eAAe,EACfC,KAAM,+CAGJd,EAAUC,aAAQ,SAACC,GAAwB,IAAjBC,EAAgB,uDAAP,GACrC,OAAQA,EAAOC,MACX,IAjBgB,WAmBZ,YADAF,EAAMY,KAAOX,EAAOW,MAGxB,IApBiB,YAuBb,YAFAZ,EAAMa,MAAQZ,EAAOY,OAIzB,IAxBkB,aA0Bd,YADAb,EAAMc,OAASb,EAAOa,QAG1B,IA3BkB,aA6Bd,YADAd,EAAMe,UAAY,GAGtB,IA9BmB,cAgCf,YADAf,EAAMe,UAAY,GAGtB,IAjCqB,gBAoCjB,OAFAf,EAAMQ,qBAAuBP,EAAOO,0BAChCP,EAAOe,YAAWhB,EAAMgB,UAAYf,EAAOe,YAGnD,IArCsB,iBAuClB,YADAhB,EAAMW,eAAiBX,EAAMW,kBAGtCrB,GAEU2B,EAAU,SAAAL,GAAI,MAAK,CAC5BV,KAlDoB,WAmDpBU,KAAMA,IAqBGM,EAAe,SAAC,GAAD,IAAGV,EAAH,EAAGA,qBAAH,MAA0C,CAClEN,KApEyB,gBAqEzBc,UAFwB,EAAyBA,UAGjDR,qBAAsBA,IAOXV,IC5ETA,EAAUqB,0BAAgB,CAC5BC,OACAC,YAGWC,wBACXxB,EACAyB,8BAAoBC,2BCbT,SAACC,GAAD,OAAW,SAACC,GAAD,OAAU,SAACzB,GACFwB,EAAvBE,SAAuBF,EAAbG,SAClBF,EAAKzB,GAEGA,EAAOC,Y,2ECEJ,aACX,IAAM2B,EAAUC,mBAiBhB,OACI,yBAAKC,UAAWC,IAAOC,KACnB,4BAAQF,UAAWC,IAAOE,OAAQC,QAb1C,WAIIC,IAAMC,IAbU,yBAUD,CACXC,QAAS,CAAC,8BAA+B,OAEVC,MAAK,SAAAC,GACpC,IAAM3B,EAAQ2B,EAAKC,KACnBC,QAAQC,IAAIH,EAAKC,MACjBG,OAAOC,KAAK,IAAMhC,EAAO,cAMzB,eACA,yBAAKkB,UAAWC,IAAOc,MACnB,2BAAO5C,KAAK,OAAO6B,UAAWC,IAAOe,KAAMC,IAAKnB,IAChD,4BAAQE,UAAWC,IAAOiB,WAAYd,QArBlD,WACI,IAAMtB,EAAQgB,EAAQqB,QAAQC,MAC9BP,OAAOC,KAAK,IAAMhC,EAAO,WAmBjB,W,0CCxBD,aAAa,IAAD,EAC8DuC,aAAY,SAAAC,GAAK,OAAIA,EAAMhC,WAAxGR,EADe,EACfA,MAAOC,EADQ,EACRA,OAAQC,EADA,EACAA,UAAWC,EADX,EACWA,UAAWR,EADtB,EACsBA,qBAAsBG,EAD5C,EAC4CA,cAC7D2C,EAAYF,aAAY,SAAAC,GAAK,OAAIA,EAAMhC,QAAQT,QAC/C2C,EAASzB,mBAET0B,EAAKC,IAAaH,GAElBI,EAAW5B,kBAAO,GA2DxB,OAvBA6B,qBAAU,WACNjB,QAAQC,IAAI,sBACPY,EAAOL,UACRnC,EACJwC,EAAOL,QAAQU,YAEfL,EAAOL,QAAQW,gBAChB,CAAC9C,IAEJ4C,qBAAU,WACDJ,EAAOL,SACZK,EAAOL,QAAQY,OAAO9C,KACvB,CAACA,IAEJ2C,qBAAU,WACDJ,EAAOL,UACZR,QAAQC,IAAI,oCACZ7B,EAAOiD,KAAK,mBAAoB,CAC5B/C,UAAWuC,EAAOL,QAAQc,iBAC1BC,KAAMpD,OAEX,CAACF,IAGA,kBAAC,IAAD,CACIuD,QAASV,EACTW,KA5DK,CACTC,MAAO,OACPC,WAAY,CAEVC,SAAU,IAyDRvC,UAAWC,IAAOuB,OAClBgB,QAtDR,SAAmBC,GACfjB,EAAOL,QAAUsB,EAAMC,OACvBlB,EAAOL,QAAQY,OAAO9C,IAqDlB0D,OAlDR,SAAiBC,GACRjB,EAASR,QASVQ,EAASR,SAAU,GARnBR,QAAQC,IAAIlC,KAAKC,MAAQF,EAAuB,KAC5CC,KAAKC,MAAQF,EAAuB,KACpCM,EAAOiD,KAAK,aAAc,CACtBE,KAAMpD,EACNG,UAAWuC,EAAOL,QAAQc,qBA6ClCY,QArCR,SAAkBD,GACd7D,EAAOiD,KAAK,cAAe,CACvBE,KAAMpD,IAEV6B,QAAQC,IAAI,kBC3CL,aACX,IAAMhB,EAAWkD,cADM,EAESzB,aAAY,SAAAC,GAAK,OAAIA,EAAMhC,WAAnDR,EAFe,EAEfA,MAAOD,EAFQ,EAERA,KAAME,EAFE,EAEFA,OAYrB,OACI,yBAAKgE,MAAO,CAACC,MAAO,UAChB,uCACW,2BAAO7E,KAAK,OAAOiD,MAAOtC,EAAOmE,UAAQ,KAEpD,sCACU,2BAAO9E,KAAK,OAAOiD,MAAOvC,EAAMqE,SAhBlD,SAAoBN,GAChB,IAAMO,EAAUP,EAAEF,OAAOtB,MACzBxB,EAASV,EAAQiE,IACjBpE,EAAOiD,KAAK,cAAe,CACvBE,KAAMpD,EACND,KAAMsE,U,kCCPH,aACX,IAAMvD,EAAWkD,cACXrF,EAAW4D,aAAY,SAAAC,GAAK,OAAIA,EAAMjC,KAAK5B,YAC3CK,EAAoBuD,aAAY,SAAAC,GAAK,OAAIA,EAAMjC,KAAKvB,qBAY1D,OACI,6BACI,yBACQsF,IAAKC,IACLN,MAAO,CAAEV,MAAO,QAChBjC,QAThB,SAAqBwC,GACjBhD,EP6C6B,CACjCzB,KA3D0B,iBA4D1BE,MO/C2BP,OAUlBA,GACG,6BACI,sCAAW,2BAAOK,KAAK,OAAOiD,MAAO3D,EAASC,SAAUwF,SAnBxE,SAAoBN,GAChBhD,EPyCwB,CAC5BzB,KAnDoB,WAoDpBT,SO3CqBkF,EAAEF,OAAOtB,YAmBd,6CAAkB,2BAAOjD,KAAK,OAAOiD,MAAO3D,EAASI,UAAWqF,SAjBhF,SAAuBN,GACnBhD,EP2C0B,CAC9BzB,KAvDyB,gBAwDzBN,UO7CwB+E,EAAEF,OAAOtB,e,iBCZtB,cAA6C,IAAjCvD,EAAgC,EAAhCA,UAAWH,EAAqB,EAArBA,SAAUa,EAAW,EAAXA,QAE5C,OACI,yBAAKyB,UAAWC,IAAOC,KACnB,yBAAKF,UAAWC,IAAOqD,MACnB,yBAAKF,IAAKvF,EAAWmC,UAAWC,IAAOsD,MACvC,yBAAKvD,UAAWC,IAAOuD,MAAO9F,IAElC,yBAAKsC,UAAWC,IAAO1B,SAAUA,K,iBCN9B,aACMuE,cAAjB,IADuB,EAESzB,aAAY,SAAAC,GAAK,OAAIA,EAAMjC,KAAK5B,YAAxDC,EAFe,EAEfA,SAAUG,EAFK,EAELA,UAFK,EAGGwD,aAAY,SAAAC,GAAK,OAAIA,EAAMhC,WAA7CR,EAHe,EAGfA,MAAOC,EAHQ,EAGRA,OAkBf,OACI,yBAAKiB,UAAWC,IAAOC,KACnB,2BAAO/B,KAAK,OAAOsF,YAAY,4BAA4BC,UAlBnE,SAAuBd,GACnB,GAAc,UAAVA,EAAEe,IAAiB,CACnB,IAAMpF,EAAU,CACZb,SAAUA,EACVG,UAAWA,EACXU,QAASqE,EAAEF,OAAOtB,MAClBc,KAAMpD,GAGVC,EAAOiD,KAAK,eAAgBzD,GAE5BqE,EAAEF,OAAOtB,MAAQ,SCdd,aACX,IAAM5D,EAAW6D,aAAY,SAAAC,GAAK,OAAIA,EAAMjC,KAAK7B,YAEjD,OACI,yBAAKwC,UAAWC,IAAOC,KACnB,kBAAC0D,EAAD,MACCpG,EAASqG,KAAI,SAACtF,EAASuF,GAAV,OACV,kBAACC,EAAD,iBAAaxF,EAAb,CAAsBoF,IAAKG,QAE/B,kBAACE,EAAD,Q,2BCiCZ,SAASC,KACL,IAAMrE,EAAWkD,cACXrF,EAAW4D,aAAY,SAAAC,GAAK,OAAIA,EAAMjC,KAAK5B,YAFrC,EAG4B4D,aAAY,SAAAC,GAAK,OAAIA,EAAMhC,WAA3DR,EAHI,EAGJA,MAEFoF,GALM,EAGGzF,qBAEM0F,cAAcC,SAASC,MAAM,IAC5CC,EAAoBvE,kBAAO,GAC3BwE,EAAyBxE,kBAAO,GA+EtC,OA7EA6B,qBAAU,WACN,IAAM7C,EAASyF,KAAeC,QA9BrB,wBA+BHC,EAAW,OAAG5F,QAAH,IAAGA,IAASoF,EAE7BnF,EAAO4F,GAAG,WAAW,WACjBhE,QAAQC,IAAI,mBAEZD,QAAQC,IAAI,UAAW8D,GACvB3F,EAAOiD,KAAK,YAAa,CACrBnE,UAAWJ,EAASI,UACpBH,SAAUD,EAASC,SACnBwE,KAAMwC,OAId3F,EAAO4F,GAAG,aAAa,SAAA/B,GACf0B,EAAkBnD,UACtBvB,EXAyB,CACjCzB,KAtEqB,YAuErBX,SWF0BoF,EAAEpF,WACpB8G,EAAkBnD,SAAU,MAGhCpC,EAAO4F,GAAG,sBAAsB,SAAA/B,GAC5BjC,QAAQC,IAAIgC,GACZhD,EAASpB,EAAY,CACjBd,SAAUkF,EAAElF,SACZa,QAAS,SACTV,UAAW+E,EAAE/E,gBAIrBkB,EAAO4F,GAAG,gBAAgB,SAAApG,GACtBqB,EAASpB,EAAYD,OAGzBQ,EAAO4F,GAAG,eAAe,SAAA/B,GACrBhD,EAASV,EAAQ0D,EAAE/D,UAGvBE,EAAO4F,GAAG,eAAe,SAAA/B,GACrBjC,QAAQC,IAAI,0BACZhB,EV5BqB,CAC7BzB,KAjEuB,mBU+FnBY,EAAO4F,GAAG,cAAc,SAAA/B,GACpBjC,QAAQC,IAAI,wBAAyBgC,GACrC,IAAIgC,EAAU,CACVnG,qBAAsBC,KAAKC,MAC3BM,UAAW2D,EAAE3D,WAEX4F,EAAQnG,KAAKC,MAAQiE,EAAEkC,YAC7BnE,QAAQC,IAAIiE,GAGZjF,EAAST,EAAayF,IACtBhF,EV9CoB,CAC5BzB,KA9DsB,kBU8GlBY,EAAO4F,GAAG,qBAAqB,SAAA/B,GAC3BhD,EVpCwB,CAChCzB,KAzE0B,sBU+GtBY,EAAO4F,GAAG,kBAAkB,SAAA/B,GACxB,IAAG2B,EAAuBpD,QAA1B,CACAR,QAAQC,IAAI,6BAA8BgC,GAC1C,IAAIgC,EAAU,CACVnG,qBAAsBC,KAAKC,MAC3BM,UAAW2D,EAAE3D,WAEjBW,EAAST,EAAayF,IAEtBL,EAAuBpD,SAAU,MAGrCvB,EVtEiB,SAAAb,GAAM,MAAK,CAChCZ,KA1DsB,aA2DtBY,OAAQA,GUoEKgG,CAAUhG,IACnBa,EV5EgB,SAAAd,GAAK,MAAK,CAC9BX,KAtDqB,YAuDrBW,MAAOA,GU0EMkG,CAASd,MACnB,IAGC,yBAAKlE,UAAU,OACX,yBAAKA,UAAWC,IAAOiC,MACnB,kBAAC+C,EAAD,MACA,kBAAC,EAAD,OAEJ,kBAACC,EAAD,OAKGC,OA/Gf,WAEI,OACI,kBAAC,IAAD,CAAUzF,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,IAAIC,UAAWrB,SC9B3BuB,QACW,cAA7B3E,OAAO4E,SAASC,UAEe,UAA7B7E,OAAO4E,SAASC,UAEhB7E,OAAO4E,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3F,MAAK,SAAA4F,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5F,QAAQ4F,MAAMA,EAAMhI,a,mBExI5BiI,EAAOC,QAAU,CAAC,IAAM,kBAAkB,OAAS,qBAAqB,KAAO,mBAAmB,KAAO,mBAAmB,WAAa,2B,mBCAzID,EAAOC,QAAU,CAAC,IAAM,qBAAqB,KAAO,sBAAsB,IAAM,qBAAqB,KAAO,sBAAsB,QAAU,2B,mBCA5ID,EAAOC,QAAU,CAAC,KAAO,oB,mBCAzBD,EAAOC,QAAU,CAAC,OAAS,gC,mBCA3BD,EAAOC,QAAU,CAAC,IAAM,oB,mBCDxBD,EAAOC,QAAU,IAA0B,sC,mBCC3CD,EAAOC,QAAU,CAAC,IAAM,sB","file":"static/js/main.3fd8ec98.chunk.js","sourcesContent":["import produce from 'immer'\n\nexport const SEND_MESSAGE = 'SEND_MESSAGE'\nexport const SET_NAME = 'SET_NAME'\nexport const SET_PHOTO_URL = 'SET_PHOTO_URL'\nexport const SET_SHOW_MODAL = 'SET_SHOW_MODAL' \nexport const SYNC_CHAT = 'SYNC_CHAT'\n\nconst localUsername = localStorage.getItem('username') ?? 'Anonymous'\nconst localPhotoURL = localStorage.getItem('photo_url') ?? 'https://i.imgur.com/mCHMpLT.png'\n\nconst initialState = {\n    messages: [\n    ],\n    userInfo: {\n        username: localUsername,\n        photo_url: localPhotoURL,\n    },\n    showSettingsModal: false\n}\n\nconst reducer = produce((draft, action = {}) => { \n    switch (action.type) {\n        case SET_NAME:\n            const { username } = action\n            draft.userInfo.username = username\n            localStorage.setItem('username', username)\n            return\n\n        case SET_PHOTO_URL:\n            const { photo_url } = action\n            draft.userInfo.photo_url = photo_url\n            localStorage.setItem('photo_url', photo_url)\n            return \n\n        case SET_SHOW_MODAL:\n            draft.showSettingsModal = action.show\n            return\n        \n        case SEND_MESSAGE:\n            draft.messages.push({\n                username: action.username,\n                photo_url: action.photo_url,\n                message: action.message,\n            })\n            return\n\n        case SYNC_CHAT:\n            draft.messages = [...action.messages, ...draft.messages]\n            return\n    }\n}, initialState)\n\nexport const setName = name => ({\n    type: SET_NAME,\n    username: name\n})\n\nexport const setPicture = url => ({\n    type: SET_PHOTO_URL,\n    photo_url: url\n})\n\nexport const setShowModal = show => ({\n    type: SET_SHOW_MODAL,\n    show: show \n})\n\nexport const sendMessage = ({ message, username, photo_url }) => ({\n    type: SEND_MESSAGE,\n    message: message,\n    username: username,\n    photo_url: photo_url\n})\n\nexport const syncChat = messages => ({\n    type: SYNC_CHAT,\n    messages: messages\n})\n\nexport default reducer","import produce from 'immer'\n\nexport const SET_LINK = 'SET_LINK'\nexport const SET_TOKEN = 'SET_TOKEN'\nexport const SET_SOCKET = 'SET_SOCKET'\nexport const PLAY_VIDEO = 'PLAY_VIDEO'\nexport const PAUSE_VIDEO = 'PAUSE_VIDEO'\nexport const SET_TIMESTAMP = 'SET_TIMESTAMP'\nexport const SEND_TIMESTAMP = 'SEND_TIMESTAMP'\n\nconst initialState = {\n    // token: '1232D',\n    timestampLastChanged: Date.now(),\n    sendTimestamp: false,\n    link: 'https://www.youtube.com/watch?v=2gQhd0_X5eE'\n}\n\nconst reducer = produce((draft, action = {}) => {\n    switch (action.type) {\n        case SET_LINK:\n            draft.link = action.link\n            return\n        \n        case SET_TOKEN:\n            draft.token = action.token\n            \n            return\n        \n        case SET_SOCKET:\n            draft.socket = action.socket\n            return\n\n        case PLAY_VIDEO:\n            draft.playState = 1\n            return\n\n        case PAUSE_VIDEO:\n            draft.playState = 0\n            return\n        \n        case SET_TIMESTAMP:\n            draft.timestampLastChanged = action.timestampLastChanged\n            if (action.timestamp) draft.timestamp = action.timestamp\n            return\n        \n        case SEND_TIMESTAMP:\n            draft.sendTimestamp = !draft.sendTimestamp\n            return\n    }\n}, initialState)\n\nexport const setLink = link => ({\n    type: SET_LINK,\n    link: link\n})\n\nexport const setToken = token => ({\n    type: SET_TOKEN,\n    token: token\n})\n\nexport const setSocket = socket => ({\n    type: SET_SOCKET,\n    socket: socket\n})\n\nexport const playVideo = () => ({\n    type: PLAY_VIDEO,\n})\n\nexport const pauseVideo = () => ({\n    type: PAUSE_VIDEO,\n })\n\nexport const setTimestamp = ({ timestampLastChanged, timestamp }) => ({\n    type: SET_TIMESTAMP,\n    timestamp: timestamp,\n    timestampLastChanged: timestampLastChanged\n})\n\nexport const sendTimestamp = () => ({\n    type: SEND_TIMESTAMP\n})\n\nexport default reducer","import { createStore, applyMiddleware, combineReducers } from \"redux\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\n\nimport middleware from './middleware'\n\nimport chat from \"./modules/chat\"\nimport session from \"./modules/session\"\n\nconst reducer = combineReducers({\n    chat,\n    session\n})\n\nexport default createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(middleware))\n)\n","import { sendMessage, SEND_MESSAGE } from './modules/chat'\n\nexport default (store) => (next) => (action) => {\n    const { dispatch, getState } = store\n    next(action)\n\n    switch (action.type) {\n        \n    }\n}","import React, { useEffect, useState, useRef } from 'react'\nimport styles from \"./Home.module.sass\"\n\nimport axios from 'axios'\n\n// const CREATE_ENDPOINT = 'http://50.116.0.53/create'\nconst CREATE_ENDPOINT = 'http://127.0.0.1:8000/'\n\nexport default function () {\n    const codeRef = useRef()\n    function join() {\n        const token = codeRef.current.value\n        window.open(\"/\" + token, \"_self\") \n    }\n    \n    function createToken() {\n        const config = {\n            headers: {'Access-Control-Allow-Origin': '*'}\n        }\n        axios.get(CREATE_ENDPOINT, config).then(resp => {\n            const token = resp.data\n            console.log(resp.data);\n            window.open(\"/\" + token, \"_self\") \n        })\n    }\n    \n    return(\n        <div className={styles.ctn}>\n            <button className={styles.create} onClick={createToken}>Create Room</button>\n            <div className={styles.join}>\n                <input type=\"text\" className={styles.code} ref={codeRef} />\n                <button className={styles.joinButton} onClick={join}>Join</button>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport YouTube from 'react-youtube'\nimport getYouTubeID from 'get-youtube-id'\n\nimport styles from \"./YouTubePlayer.module.sass\"\n\nexport default function () {\n    const { token, socket, playState, timestamp, timestampLastChanged, sendTimestamp } = useSelector(state => state.session)\n    const videoLink = useSelector(state => state.session.link)\n    const player = useRef()\n\n    const id = getYouTubeID(videoLink)\n\n    const firstRun = useRef(true)\n\n    const opts = {\n        width: '100%',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1,\n        },\n    }\n    \n    function setPlayer(event) {\n        player.current = event.target\n        player.current.seekTo(timestamp)\n    }\n\n    function setPlay(e) {\n        if (!firstRun.current) {\n            console.log(Date.now() - timestampLastChanged > 500)\n            if (Date.now() - timestampLastChanged > 1000) {\n                socket.emit('play_video', {\n                    room: token,\n                    timestamp: player.current.getCurrentTime(),\n                })\n            }\n        } else {\n            firstRun.current = false\n        }\n    }\n    \n    function setPause(e) {\n        socket.emit('pause_video', {\n            room: token\n        })\n        console.log('paused vid')   \n    }\n\n    useEffect(() => {\n        console.log('play state changed')\n        if (!player.current) return\n        if (playState)\n        player.current.playVideo()\n        else\n        player.current.pauseVideo()\n    }, [playState])\n    \n    useEffect(() => {\n        if (!player.current) return\n        player.current.seekTo(timestamp)\n    }, [timestamp])\n    \n    useEffect(() => {\n        if (!player.current) return\n        console.log('somebody requested the timestamp')\n        socket.emit('update_timestamp', {\n            timestamp: player.current.getCurrentTime(),\n            room: token\n        })\n    }, [sendTimestamp])\n\n    return(\n        <YouTube\n            videoId={id}\n            opts={opts}\n            className={styles.player}\n            onReady={setPlayer}\n            onPlay={setPlay}\n            onPause={setPause}\n        />\n    )\n}","import React, { useEffect, useState, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setLink } from '../../ducks/modules/session'\n\nexport default function () {\n    const dispatch = useDispatch()\n    const { token, link, socket } = useSelector(state => state.session)\n\n    function updateLink(e) {\n        const newLink = e.target.value\n        dispatch(setLink(newLink))\n        socket.emit('update_link', {\n            room: token,\n            link: newLink\n        })\n    }\n\n\n    return(\n        <div style={{color: 'white'}}>\n            <div>\n                Token: <input type=\"text\" value={token} readOnly/>\n            </div>\n            <div>\n                Link: <input type=\"text\" value={link} onChange={updateLink}/>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setName, setPicture, setShowModal } from '../../ducks/modules/chat'\n\nimport settingsIcon from './settings.png'\n\nexport default function () {\n    const dispatch = useDispatch()\n    const userInfo = useSelector(state => state.chat.userInfo)\n    const showSettingsModal = useSelector(state => state.chat.showSettingsModal)\n\n    function updateName(e) {\n        dispatch(setName(e.target.value))\n    }\n    function updatePicture(e) {\n        dispatch(setPicture(e.target.value))\n    }\n    function toggleModal(e) {\n        dispatch(setShowModal(!showSettingsModal))\n    }\n\n    return (\n        <div>\n            <img\n                    src={settingsIcon}\n                    style={{ width: '20px' }}\n                    onClick={toggleModal}\n            />\n            {showSettingsModal && (\n                <div>\n                    <div>name: <input type=\"text\" value={userInfo.username} onChange={updateName}/></div>\n                    <div>Picture URL: <input type=\"text\" value={userInfo.photo_url} onChange={updatePicture}/></div>\n                </div >\n            )}\n        </div>\n    )\n}","import React, { useEffect, useState, useRef } from 'react'\nimport styles from \"./Message.module.sass\"\n\nexport default function ({ photo_url, username, message }) {\n    \n    return(\n        <div className={styles.ctn}>\n            <div className={styles.user}>\n                <img src={photo_url} className={styles.pic}/>\n                <div className={styles.name}>{username}</div>\n            </div>\n            <div className={styles.message}>{message}</div>\n        </div>\n    )\n}","import React, { useEffect, useState, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport styles from \"./Input.module.sass\"\nimport { sendMessage } from '../../ducks/modules/chat'\n\nexport default function () {\n    const dispatch = useDispatch()\n    const { username, photo_url } = useSelector(state => state.chat.userInfo)\n    const { token, socket } = useSelector(state => state.session)\n\n    function handleKeyDown(e) {\n        if (e.key === 'Enter') {\n            const message = {\n                username: username,\n                photo_url: photo_url,\n                message: e.target.value,\n                room: token\n            }\n            // dispatch(sendMessage(message))\n            socket.emit('chat_message', message)\n\n            e.target.value = ''\n        }\n            \n    }\n    \n    return(\n        <div className={styles.ctn}>\n            <input type=\"text\" placeholder='type your message here...' onKeyDown={handleKeyDown}/>\n        </div>\n    )\n}","import React, { useEffect, useState, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport styles from \"./Chat.module.sass\" \nimport Settings from './Settings'\nimport Message from './Message'\nimport Input from './Input'\n\nexport default function () {\n    const messages = useSelector(state => state.chat.messages)\n\n    return(\n        <div className={styles.ctn}>\n            <Settings />\n            {messages.map((message, i) => (\n                <Message {...message} key={i}/>\n            )) }\n            <Input />\n        </div>\n    )\n}","import React, { useEffect, useRef, useState } from 'react'\nimport { Provider, useSelector, useDispatch } from 'react-redux'\nimport store from './ducks/store'\n\nimport { BrowserRouter, Route, Switch, useLocation} from 'react-router-dom'\n\nimport './App.css';\nimport styles from \"./App.module.sass\"\n\nimport Home from './components/Home/Home'\nimport YouTubePlayer from './components/YouTubePlayer/YouTubePlayer'\nimport SessionController from './components/RoomControls/RoomControls'\nimport Chat from './components/Chat/Chat'\n\nimport SockJs from 'sockjs-client'\nimport socketIOClient from \"socket.io-client\"\n\nimport {\n    setToken,\n    setSocket,\n    setLink,\n    playVideo,\n    pauseVideo,\n    setTimestamp,\n    sendTimestamp\n} from './ducks/modules/session'\nimport { sendMessage, syncChat } from './ducks/modules/chat'\n\n\nconst ENDPOINT = 'http://159.89.2.108/'\n// const ENDPOINT = 'http://50.116.0.53/'\n// const ENDPOINT = 'http://127.0.0.1:5000/'\n// const ENDPOINT = 'http://127.0.0.1:8000/'\n// const ENDPOINT = 'https://maketube.herokuapp.com/'\n\nfunction App() {\n    \n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path='/' component={Home} />\n                    <Route path='*' component={Room} />\n                </Switch>\n            </BrowserRouter>\n        </Provider> \n    )\n}\n\nfunction Room() {\n    const dispatch = useDispatch()\n    const userInfo = useSelector(state => state.chat.userInfo)\n    const { token, timestampLastChanged } = useSelector(state => state.session)\n\n    const tokenFromURL = useLocation().pathname.slice(1)\n    const alreadySyncedChat = useRef(false)\n    const alreadySyncedTimestamp = useRef(false)\n\n    useEffect(() => {\n        const socket = socketIOClient.connect(ENDPOINT)\n        const tokenToSend = token ?? tokenFromURL\n\n        socket.on('connect', () => {\n            console.log('connection open')\n    \n            console.log('sending', tokenToSend)\n            socket.emit('join_room', {\n                photo_url: userInfo.photo_url,\n                username: userInfo.username,\n                room: tokenToSend\n            })\n        })\n\n        socket.on('sync_chat', e => {\n            if (alreadySyncedChat.current) return\n            dispatch(syncChat(e.messages))\n            alreadySyncedChat.current = true\n        })\n        \n        socket.on('connection_message', e => {\n            console.log(e)\n            dispatch(sendMessage({\n                username: e.username,\n                message: 'joined',\n                photo_url: e.photo_url\n            }))\n        })\n\n        socket.on('chat_message', message => {\n            dispatch(sendMessage(message))\n        })\n\n        socket.on('update_link', e => {\n            dispatch(setLink(e.link))\n        })\n\n        socket.on('pause_video', e => {\n            console.log('received pause command')\n            dispatch(pauseVideo())\n        })\n        \n        socket.on('play_video', e => {\n            console.log('received play command', e)\n            let payload = {\n                timestampLastChanged: Date.now(),\n                timestamp: e.timestamp\n            }\n            const delta = Date.now() - e.actionStamp\n            console.log(delta)\n            // if ((delta) > 500)\n            // payload.timestamp = e.timestamp\n            dispatch(setTimestamp(payload))\n            dispatch(playVideo())\n        })\n        \n        socket.on('request_timestamp', e => {\n            dispatch(sendTimestamp())\n        })\n        \n        socket.on('sync_timestamp', e => {\n            if(alreadySyncedTimestamp.current) return\n            console.log('supposed to sync timestamp', e)\n            let payload = {\n                timestampLastChanged: Date.now(),\n                timestamp: e.timestamp\n            }\n            dispatch(setTimestamp(payload))\n            // dispatch(playVideo())\n            alreadySyncedTimestamp.current = true\n        })\n\n        dispatch(setSocket(socket))\n        dispatch(setToken(tokenFromURL))\n    }, [])\n\n    return (\n        <div className='App'>\n            <div className={styles.room}>\n                <YouTubePlayer />\n                <SessionController />\n            </div>\n            <Chat />\n        </div>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ctn\":\"Home_ctn__1HJDH\",\"create\":\"Home_create__3Q9FB\",\"code\":\"Home_code__3XPvS\",\"join\":\"Home_join__1p59Y\",\"joinButton\":\"Home_joinButton__3SWT2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ctn\":\"Message_ctn__3Hmod\",\"user\":\"Message_user__2v6XF\",\"pic\":\"Message_pic__1493D\",\"name\":\"Message_name__31XIv\",\"message\":\"Message_message__12vAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"room\":\"App_room__-_sPV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"YouTubePlayer_player__3Y8f0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ctn\":\"Chat_ctn__1Z1_d\"};","module.exports = __webpack_public_path__ + \"static/media/settings.92c25f37.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ctn\":\"Input_ctn__38Mt_\"};"],"sourceRoot":""}